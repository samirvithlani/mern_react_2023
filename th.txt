
{/* <h1>HELLO ALL....</h1>
      {name}
      <h1>Name = {name}</h1>
      <h1>Runs = {runs}</h1>
      <h1>isMarried = {isMarried == true ? "YES" : "NO"}</h1>
      <h1>ODI score = {score.odi}</h1>
      <h1>Test score = {score.test}</h1>
      <h1>Age = {age}</h1> */}
      var name ="Kohli"
  var runs = 10000
  var isMarried = true
  var age = 30
  //json...
  var score={
    test:21,
    odi:50,

  }



MVC: MODEL VIEW CONTROLLER
MICROSERVICES:

MODULE BASED ARCH:
component based arch: [ecom:] 
[product,[addProduct],[list],[edit],[delete]]
[cart]
[payment]

:recat compoant: 
1)class based component
    after 16.0.0 --> 18.x
2)functional component: hooks --> life cycle


//2types of function 
1)function declaration
2)arrow function

communication bw compoants

1)props : props object
    inheritacne --> parent to child

2)context api
3)redux


today topic: 27-11-2023

install extension: ES7 React/Redux/GraphQL/React-Native snippets
create folder name compoants
create file Home.js and write rafc and enter
create file Heade.jsx and write rfc and enter
create file Footer.jsx and write rfc and enter

implment external css in Home.js --> layout.css
implment internal css in Header .jsx [check code]
implment inline css in Footer.jsx [check code]

introduction of props:

pass data from app.js to Home.js
  get data in props object
pass data from Home.js to Header.jsx
  get data with sperate objects without props


create an array of users and iterate using map function
pass users array from app.js to Home.js
  get data in props object


https://getbootstrap.com/docs/4.1/getting-started/introduction/


props drilling:

//map will return all records
//filter will return only satisfied records


:virtual dom in react js: 
//dom --> document object model 

clone of real dom : -->virtual dom 


hooks --> life cycle / built in methods

useState -->state management

{
  id,name ,email
  set

}

create folder user -->
component Users.jsx
component UsersList.jsx

//users ---> user array -->
//usersList ---> props array
//usersList table using map users iteration

//creaet test function Users [parent] 
//create test function User [child] --> call props.test

//create Datele function users --> id -->
//delete call --> usersList [ child] ==> props.deleetuser(id)
//filter --> update users...--> but it will not update in real time


//useState --> hooks --> life cycle / built in methods
count var --> setCount --> 0

count increment -->function updateCount value --> setCount(value) --> evenetully it will update in real time
//filter --> update users...--> but it will not update in real time

users array useSate -->  inital data --> 3 obejcts...

deleteFuction ()filter --.
filter record setUsers --> setUsers(newUsers) --> evenetully it will update in real time


